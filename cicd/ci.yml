# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  vmImage: ubuntu-latest

strategy:
  matrix:
    Python310:
      python.version: '3.10'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install pipx
    pipx install poetry==1.4.2
    poetry install
  displayName: 'Install dependencies'

- script: |
    poetry run dvc pull
  displayName: 'Pull data with dvc'
  env:
    AZURE_STORAGE_CONNECTION_STRING: $(DEV-DATA-BLOB-CONNECTION-STRING)

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'poetry run python cicd/update_data.py'
  displayName: 'Update data in blob storage'
  env: 
    DEV_DATA_BLOB_CONNECTION_STRING: $(DEV-DATA-BLOB-CONNECTION-STRING)

- script: |
    poetry build
    cp dist/* ../../env_training/
  workingDirectory: ./diabetes_classifier/diabetes_classifier_models
  displayName: 'Install dependencies'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'poetry run python cicd/create_training_environment.py'
  displayName: 'Create training environment'
  env: 
    SERVICE_PRINCIPAL_CLIENT_SECRET: $(SERVICE-PRINCIPAL-CLIENT-SECRET)

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'poetry run python cicd/submit_training_job.py'
  displayName: 'Submit training job'
  env: 
    SERVICE_PRINCIPAL_CLIENT_SECRET: $(SERVICE-PRINCIPAL-CLIENT-SECRET)

